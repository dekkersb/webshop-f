{"ast":null,"code":"import _asyncToGenerator from \"/Users/bartrecranet/Code/RecraShop/recrashop-front/App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PaymentComponent = class PaymentComponent {\n  constructor(cd, data, dialogRef) {\n    this.cd = cd;\n    this.data = data;\n    this.dialogRef = dialogRef;\n    this.cardHandler = this.onChange.bind(this);\n    this._totalAmount = data['totalAmount'];\n  }\n\n  ngOnDestroy() {\n    if (this.card) {\n      // We remove event listener here to keep memory clean\n      this.card.removeEventListener('change', this.cardHandler);\n      this.card.destroy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.initiateCardElement();\n  }\n\n  initiateCardElement() {\n    // Giving a base style here, but most of the style is in scss file\n    const cardStyle = {\n      base: {\n        color: '#32325d',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    };\n    this.card = elements.create('card', {\n      cardStyle\n    });\n    this.card.mount(this.cardInfo.nativeElement);\n    this.card.addEventListener('change', this.cardHandler);\n  }\n\n  onChange({\n    error\n  }) {\n    if (error) {\n      this.cardError = error.message;\n    } else {\n      this.cardError = null;\n    }\n\n    this.cd.detectChanges();\n  }\n\n  createStripeToken() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        token,\n        error\n      } = yield stripe.createToken(_this.card);\n\n      if (token) {\n        _this.onSuccess(token);\n      } else {\n        _this.onError(error);\n      }\n    })();\n  }\n\n  onSuccess(token) {\n    this.dialogRef.close({\n      token\n    });\n  }\n\n  onError(error) {\n    if (error.message) {\n      this.cardError = error.message;\n    }\n  }\n\n};\n\n__decorate([ViewChild('cardInfo')], PaymentComponent.prototype, \"cardInfo\", void 0);\n\nPaymentComponent = __decorate([Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n}), __param(1, Inject(MAT_DIALOG_DATA))], PaymentComponent);\nexport { PaymentComponent };\nconstructor();\n{}\nngOnInit();\nvoid {};","map":{"version":3,"sources":["/Users/bartrecranet/Code/RecraShop/recrashop-front/App/src/app/payment/payment.component.ts"],"names":["__decorate","__param","Component","PaymentComponent","constructor","cd","data","dialogRef","cardHandler","onChange","bind","_totalAmount","ngOnDestroy","card","removeEventListener","destroy","ngAfterViewInit","initiateCardElement","cardStyle","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","elements","create","mount","cardInfo","nativeElement","addEventListener","error","cardError","message","detectChanges","createStripeToken","token","stripe","createToken","onSuccess","onError","close","ViewChild","prototype","selector","templateUrl","styleUrls","Inject","MAT_DIALOG_DATA","ngOnInit"],"mappings":"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","sourcesContent":["import { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PaymentComponent = class PaymentComponent {\n    constructor(cd, data, dialogRef) {\n        this.cd = cd;\n        this.data = data;\n        this.dialogRef = dialogRef;\n        this.cardHandler = this.onChange.bind(this);\n        this._totalAmount = data['totalAmount'];\n    }\n    ngOnDestroy() {\n        if (this.card) {\n            // We remove event listener here to keep memory clean\n            this.card.removeEventListener('change', this.cardHandler);\n            this.card.destroy();\n        }\n    }\n    ngAfterViewInit() {\n        this.initiateCardElement();\n    }\n    initiateCardElement() {\n        // Giving a base style here, but most of the style is in scss file\n        const cardStyle = {\n            base: {\n                color: '#32325d',\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n                fontSmoothing: 'antialiased',\n                fontSize: '16px',\n                '::placeholder': {\n                    color: '#aab7c4',\n                },\n            },\n            invalid: {\n                color: '#fa755a',\n                iconColor: '#fa755a',\n            },\n        };\n        this.card = elements.create('card', { cardStyle });\n        this.card.mount(this.cardInfo.nativeElement);\n        this.card.addEventListener('change', this.cardHandler);\n    }\n    onChange({ error }) {\n        if (error) {\n            this.cardError = error.message;\n        }\n        else {\n            this.cardError = null;\n        }\n        this.cd.detectChanges();\n    }\n    async createStripeToken() {\n        const { token, error } = await stripe.createToken(this.card);\n        if (token) {\n            this.onSuccess(token);\n        }\n        else {\n            this.onError(error);\n        }\n    }\n    onSuccess(token) {\n        this.dialogRef.close({ token });\n    }\n    onError(error) {\n        if (error.message) {\n            this.cardError = error.message;\n        }\n    }\n};\n__decorate([\n    ViewChild('cardInfo')\n], PaymentComponent.prototype, \"cardInfo\", void 0);\nPaymentComponent = __decorate([\n    Component({\n        selector: 'app-payment',\n        templateUrl: './payment.component.html',\n        styleUrls: ['./payment.component.css']\n    }),\n    __param(1, Inject(MAT_DIALOG_DATA))\n], PaymentComponent);\nexport { PaymentComponent };\nconstructor();\n{ }\nngOnInit();\nvoid {};\n"]},"metadata":{},"sourceType":"module"}